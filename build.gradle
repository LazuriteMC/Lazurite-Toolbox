plugins {
    id 'architectury-plugin' version "$architectury_plugin_version"
    id 'com.github.johnrengelman.shadow' version "$shadow_version"
    id 'dev.architectury.loom' version "$loom_version" apply false
}

architectury {
    minecraft minecraft_version
}

allprojects {
    apply plugin: 'java'

    version mod_version
    group maven_group

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(16)
        }

        withSourcesJar()
    }
}

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    archivesBaseName = rootProject.archivesBaseName + '-' + name
    loom.silentMojangMappingsLicense()
    architectury."$name"()

    dependencies {
        minecraft "com.mojang:minecraft:$minecraft_version"
        mappings loom.officialMojangMappings()
        modApi "dev.architectury:architectury:$architectury_version"
    }

    if (name != 'common') {
        architectury.platformSetupLoomIde()

        configurations {
            common
            shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
            compileClasspath.extendsFrom common
            runtimeClasspath.extendsFrom common
        }

        dependencies {
            common(project(path: ":common", configuration: "namedElements"))
        }

        shadowJar {
            configurations = [project.configurations.shadowCommon]
        }

        remapJar {
            dependsOn shadowJar
            input.set shadowJar.archiveFile
        }

        sourcesJar {
            from project(':common').sourceSets.main.allSource
        }

        components.java {
            withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
                skip()
            }
        }
    }

    publishing {
        repositories {
            maven {
                name 'Lazurite'
                url 'https://lazurite.dev/releases'

                credentials {
                    username property('publish.lazurite.alias')
                    password property('publish.lazurite.secret')
                }
            }
        }
    }
}