architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$fabric_loader_version"
    modApi "net.fabricmc.fabric-api:fabric-api:$fabric_api_version"
    common(project(path: ":common", configuration: "namedElements")).transitive false
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")).transitive false
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

processResources {
    inputs.property "version", version

    filesMatching "fabric.mod.json", {
        expand "version": version
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            from components.java
        }
    }
}
