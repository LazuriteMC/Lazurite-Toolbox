buildscript {
	repositories {
		// These repositories are only for Gradle plugins, put any other repositories in the repository block further below
		maven { url = 'https://maven.minecraftforge.net' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

minecraft {
	mappings channel: 'official', version: '1.17.1'

	//accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			mods {
				toolbox {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			mods {
				toolbox {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			args '--mod', 'toolbox', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				toolbox {
					source sourceSets.main
				}
			}
		}
	}
}


allprojects { project ->
	apply plugin: 'net.minecraftforge.gradle'
	apply plugin: 'eclipse'
	apply plugin: 'maven-publish'

	sourceSets.main.resources { srcDir 'src/generated/resources' }

	archivesBaseName = project.archives_base_name
	version = project.mod_version
	group = project.maven_group

	dependencies {
		minecraft 'net.minecraftforge:forge:1.17.1-37.0.82'
	}

	repositories {
		mavenLocal()
	}

	processResources {
		inputs.property "version", project.version

		filesMatching("META-INF/mods.toml") {
			expand "version": project.version
		}
	}
	
	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
		it.options.release = 16
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	java {
		withSourcesJar()
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${project.archivesBaseName}"}
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				artifactId archivesBaseName
				artifact jar
			}
		}
		repositories {
			mavenLocal()
		}
	}

}